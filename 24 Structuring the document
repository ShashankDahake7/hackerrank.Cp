#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <assert.h>
#define MAX_CHARACTERS 1005
#define MAX_PARAGRAPHS 5

struct word {
    char* data;
};

struct sentence {
    struct word* data;
    int word_count;//denotes number of words in a sentence
};

struct paragraph {
    struct sentence* data  ;
    int sentence_count;//denotes number of sentences in a paragraph
};

struct document {
    struct paragraph* data;
    int paragraph_count;//denotes number of paragraphs in a document
};
typedef struct document document;
typedef struct paragraph paragraph;
typedef struct sentence sentence;
typedef struct word word;

#define parse_subparts(text, delim, parent_type, sub_type, max_subs) {\
    parent_type parent;\
    parent.data = malloc((max_subs) * sizeof(sub_type));\
\
    char *lasts;\
    char *sub_text = strtok_r((text), (delim), &lasts);\
    int i;\
\
    for (i = 0;  sub_text;  i++) {\
        parent.data[i] = get_##sub_type(sub_text);\
        sub_text = strtok_r(NULL, (delim), &lasts);\
    }\
\
    parent.sub_type##_count = i;\
    parent.data = realloc(parent.data, i * sizeof(sub_type));\
\
    return parent;\
}

word get_word(char *text) {
    word w = { text };
    return w;
}

sentence get_sentence(char *text) {
    parse_subparts(text, " ", sentence, word, MAX_CHARACTERS);
}

paragraph get_paragraph(char *text) {
    parse_subparts(text, ".", paragraph, sentence, MAX_CHARACTERS);
}

document get_document(char* text) {
    parse_subparts(text, "\n", document, paragraph, MAX_PARAGRAPHS);
}

paragraph kth_paragraph(struct document Doc, int k) {
    return Doc.data[k - 1];
}

sentence kth_sentence_in_mth_paragraph(struct document Doc, int k, int m) { 
    return kth_paragraph(Doc, m).data[k - 1];
}

word kth_word_in_mth_sentence_of_nth_paragraph(struct document Doc, int k, int m, int n) {
    return kth_sentence_in_mth_paragraph(Doc, m, n).data[k - 1];
}
